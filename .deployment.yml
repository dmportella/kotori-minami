apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    field.cattle.io/creatorId: user-fmnzd
    field.cattle.io/publicEndpoints: '[{"addresses":["10.44.17.151"],"port":80,"protocol":"HTTP","serviceName":"server:ingress-46a9c614a10def7d13aae679f31f8dc1","ingressName":"server:kotori-minami","hostname":"kotori-minami.server.10.44.17.151.xip.io","allNodes":true}]'
  creationTimestamp: 2018-12-11T11:27:47Z
  generation: 3
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-server-kotori-minami
  name: kotori-minami
  namespace: server
  resourceVersion: "22265"
  selfLink: /apis/apps/v1beta2/namespaces/server/deployments/kotori-minami
  uid: c93a6794-fd37-11e8-ad4a-e82aeab1ec20
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-server-kotori-minami
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: 2018-12-11T11:42:51Z
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-server-kotori-minami
    spec:
      containers:
      - image: 127.0.0.1:34152/dmportella/kotori-minami:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 2
        name: kotori-minami
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 2
          successThreshold: 2
          timeoutSeconds: 2
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: pipeline-docker-registry
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2018-12-11T11:43:07Z
    lastUpdateTime: 2018-12-11T11:43:07Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: 2018-12-11T11:42:51Z
    lastUpdateTime: 2018-12-11T11:43:07Z
    message: ReplicaSet "kotori-minami-786f5f8f46" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
